@app.post("/users")
def create_user(user: UserCreate, db: Session = Depends(get_db)):
    # Check if user already exists
    existing_user = db.query(User).filter(User.email == user.email).first()
    if existing_user:
        raise HTTPException(status_code=400, detail="Email already registered")
    
    # Create and save the new user
    new_user = User(username=user.username, email=user.email, password=user.password)
    db.add(new_user)
    db.commit()
    db.refresh(new_user)
    return new_user

Steps Taken
Frontend sends POST request → POST /users.
FastAPI calls the endpoint → Executes create_user() function.
Database session is created → db session is passed to the function.
SQLAlchemy checks for duplicates → Runs a query to check for existing users.
New user is added → Inserts a new record in the users table.
Changes are committed → Writes the data to users.db.
Response is sent to the client → Returns the new user as a JSON response.